mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.3
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'testab', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\TxtInOutMINT\TxtInOut\mic
mic   initialization.py  INFO     MIC has initialized the component
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   commands.py        DEBUG    Converting any CRLF to LF: ['mic.log', 'mic.yaml', 'Dockerfile', 'entrypoint.sh']
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'testab'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'testab:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'testab_42ca9717'}}
mic   commands.py        INFO     start done
mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.3
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'testab', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\TxtInOutMINT\TxtInOut\mic
mic   initialization.py  INFO     MIC has initialized the component
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   commands.py        DEBUG    Converting any CRLF to LF: ['mic.log', 'mic.yaml', 'Dockerfile', 'entrypoint.sh']
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'testab'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'testab:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'testab_91e475fb'}}
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('rev670_32rel.exe',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('rev670_32rel',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   commands.py        INFO     start done
mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.3
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'testabb', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\TxtInOutMINT\TxtInOut\mic
mic   initialization.py  INFO     MIC has initialized the component
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   commands.py        DEBUG    Converting any CRLF to LF: ['mic.log', 'mic.yaml', 'Dockerfile', 'entrypoint.sh']
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'testabb'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'testabb:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'testabb_89721665'}}
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': True, 'type': 'bool'}}}
mic   commands.py        DEBUG    Append mode: False
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('./swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('./swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('./swat670', '-i', 'inut.txt', '-o', 'output.txt'), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('./swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('./swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/basins.bsn', '/tmp/mint/file.cio'), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'basins_bsn': {'path': 'basins.bsn', 'format': 'bsn'}, 'file_cio': {'path': 'file.cio', 'format': 'cio'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/basins.bsn
mic   commands.py        ERROR    Configs failed: 'utf-8' codec can't decode byte 0xba in position 174: invalid start byte
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 268, in configs
    add_params_from_config(mic_config_file, item)
  File "/usr/local/lib/python3.6/dist-packages/mic/config_yaml.py", line 217, in add_params_from_config
    file = f.readlines()
  File "/usr/lib/python3.6/codecs.py", line 321, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xba in position 174: invalid start byte
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/basins.bsn', '/tmp/mint/file.cio'), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'basins_bsn': {'path': 'basins.bsn', 'format': 'bsn'}, 'file_cio': {'path': 'file.cio', 'format': 'cio'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/basins.bsn
mic   commands.py        ERROR    Configs failed: 'utf-8' codec can't decode byte 0xba in position 174: invalid start byte
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 268, in configs
    add_params_from_config(mic_config_file, item)
  File "/usr/local/lib/python3.6/dist-packages/mic/config_yaml.py", line 217, in add_params_from_config
    file = f.readlines()
  File "/usr/lib/python3.6/codecs.py", line 321, in decode
    (result, consumed) = self._buffer_decode(data, self.errors, final)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xba in position 174: invalid start byte
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/basins.bsn', '/tmp/mint/file.cio'), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'basins_bsn': {'path': 'basins.bsn', 'format': 'bsn'}, 'file_cio': {'path': 'file.cio', 'format': 'cio'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/basins.bsn
mic   config_yaml.py     INFO     Automatically adding parameter from config: "SFTMP"
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}}}}
mic   config_yaml.py     INFO     Automatically adding parameter from config: "SMTMP"
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}}}}
mic   config_yaml.py     INFO     Automatically adding parameter from config: "SMFMX"
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}}}}
mic   config_yaml.py     INFO     Automatically adding parameter from config: "SMFMN"
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}}}}
mic   config_yaml.py     INFO     Automatically adding parameter from config: "TIMP"
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/file.cio
mic   config_yaml.py     INFO     Automatically adding parameter from config: "YEARS"
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'default_value': 0, 'description': '', 'type': ''}}}}
mic   config_yaml.py     INFO     Automatically adding parameter from config: "START_YEAR"
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'default_value': 0, 'description': '', 'type': ''}, 'START_YEAR': {'default_value': 0, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: ['/tmp/mint/000170007.sep', '/tmp/mint/000090003.sep', '/tmp/mint/000180004.sep', '/tmp/mint/000070003.gw', '/tmp/mint/000200001.chm', '/tmp/mint/000220003.chm', '/tmp/mint/000080001.gw', '/tmp/mint/000110003.hru', '/tmp/mint/000050000.swq', '/tmp/mint/rch.dat', '/tmp/mint/000070006.mgt', '/tmp/mint/000110001.chm', '/tmp/mint/000070001.gw', '/tmp/mint/000160007.chm', '/tmp/mint/000030004.hru', '/tmp/mint/000040006.sol', '/tmp/mint/000200000.sub', '/tmp/mint/000170004.gw', '/tmp/mint/000060000.pnd', '/tmp/mint/000010005.gw', '/tmp/mint/000050003.mgt', '/tmp/mint/000100002.hru', '/tmp/mint/000020004.sol', '/tmp/mint/000120006.hru', '/tmp/mint/000060000.wus', '/tmp/mint/000020009.hru', '/tmp/mint/000220003.mgt', '/tmp/mint/000150006.sep', '/tmp/mint/000150004.sol', '/tmp/mint/000150001.mgt', '/tmp/mint/000110000.pnd', '/tmp/mint/000060004.sol', '/tmp/mint/000080001.sep', '/tmp/mint/000170005.chm', '/tmp/mint/000150004.sep', '/tmp/mint/000160008.sep', '/tmp/mint/000030003.sep', '/tmp/mint/000180004.chm', '/tmp/mint/000070002.mgt', '/tmp/mint/000140000.wgn', '/tmp/mint/000060003.mgt', '/tmp/mint/000200003.mgt', '/tmp/mint/000020007.hru', '/tmp/mint/000150013.chm', '/tmp/mint/000200000.swq', '/tmp/mint/000230004.sep', '/tmp/mint/000110008.chm', '/tmp/mint/output.hru', '/tmp/mint/000130003.mgt', '/tmp/mint/000150000.wgn', '/tmp/mint/000160001.gw', '/tmp/mint/000190006.hru', '/tmp/mint/000020002.sep', '/tmp/mint/fert.dat', '/tmp/mint/000040010.sol', '/tmp/mint/000050001.hru', '/tmp/mint/000050000.wus', '/tmp/mint/000050003.sep', '/tmp/mint/000060000.wgn', '/tmp/mint/000080002.hru', '/tmp/mint/000220004.gw', '/tmp/mint/000170005.sep', '/tmp/mint/000110004.chm', '/tmp/mint/000150009.chm', '/tmp/mint/000110012.mgt', '/tmp/mint/000070005.chm', '/tmp/mint/000010004.mgt', '/tmp/mint/000120003.hru', '/tmp/mint/000180003.hru', '/tmp/mint/000130002.sol', '/tmp/mint/000010003.sep', '/tmp/mint/000150004.hru', '/tmp/mint/000090001.sol', '/tmp/mint/000220000.wus', '/tmp/mint/000150013.sep', '/tmp/mint/000100004.mgt', '/tmp/mint/000160002.chm', '/tmp/mint/000050005.chm', '/tmp/mint/000150002.mgt', '/tmp/mint/000200002.chm', '/tmp/mint/000020000.wgn', '/tmp/mint/000150000.rte', '/tmp/mint/000120003.chm', '/tmp/mint/000220002.hru', '/tmp/mint/000040007.hru', '/tmp/mint/000050000.sub', '/tmp/mint/000230007.chm', '/tmp/mint/000170000.wus', '/tmp/mint/000190003.gw', '/tmp/mint/000230011.sep', '/tmp/mint/000090000.wgn', '/tmp/mint/000150001.sol', '/tmp/mint/000120004.chm', '/tmp/mint/000140001.gw', '/tmp/mint/000200000.rte', '/tmp/mint/000070008.gw', '/tmp/mint/000120008.sol', '/tmp/mint/000100000.swq', '/tmp/mint/000230006.sol', '/tmp/mint/septic.out', '/tmp/mint/000190008.sol', '/tmp/mint/000010003.chm', '/tmp/mint/000020006.mgt', '/tmp/mint/000040003.sol', '/tmp/mint/000020003.gw', '/tmp/mint/000040009.gw', '/tmp/mint/000110003.sep', '/tmp/mint/000030001.sol', '/tmp/mint/000050004.hru', '/tmp/mint/000070002.sep', '/tmp/mint/000080000.swq', '/tmp/mint/000110009.chm', '/tmp/mint/000070000.pnd', '/tmp/mint/000090003.gw', '/tmp/mint/000030005.sep', '/tmp/mint/000070006.sep', '/tmp/mint/000150013.mgt', '/tmp/mint/000010005.sep', '/tmp/mint/000170005.sol', '/tmp/mint/000150009.gw', '/tmp/mint/000160007.hru', '/tmp/mint/000020001.hru', '/tmp/mint/000070004.chm', '/tmp/mint/000190001.gw', '/tmp/mint/000130001.gw', '/tmp/mint/000010002.sol', '/tmp/mint/000030001.hru', '/tmp/mint/000230009.sep', '/tmp/mint/000150015.sep', '/tmp/mint/000070003.sol', '/tmp/mint/000040013.hru', '/tmp/mint/000130006.sol', '/tmp/mint/000190000.sub', '/tmp/mint/000040000.pnd', '/tmp/mint/000110001.sol', '/tmp/mint/000080002.mgt', '/tmp/mint/000190006.chm', '/tmp/mint/000130005.gw', '/tmp/mint/000130006.sep', '/tmp/mint/000230005.chm', '/tmp/mint/000090001.gw', '/tmp/mint/000010002.hru', '/tmp/mint/basins.bsn', '/tmp/mint/000010000.wus', '/tmp/mint/000040000.wgn', '/tmp/mint/000060002.chm', '/tmp/mint/000230002.mgt', '/tmp/mint/000210001.chm', '/tmp/mint/000210002.chm', '/tmp/mint/000010002.sep', '/tmp/mint/000070004.gw', '/tmp/mint/000070009.mgt', '/tmp/mint/000190008.gw', '/tmp/mint/output.rsv', '/tmp/mint/000110000.sub', '/tmp/mint/000120008.hru', '/tmp/mint/000110010.hru', '/tmp/mint/000040004.sep', '/tmp/mint/000090002.hru', '/tmp/mint/000200003.hru', '/tmp/mint/000230003.hru', '/tmp/mint/000040007.sep', '/tmp/mint/swat670', '/tmp/mint/000010002.mgt', '/tmp/mint/000120007.chm', '/tmp/mint/000190003.chm', '/tmp/mint/000160004.chm', '/tmp/mint/000070000.wus', '/tmp/mint/000070007.mgt', '/tmp/mint/000120002.sol', '/tmp/mint/000070006.chm', '/tmp/mint/000020005.chm', '/tmp/mint/000150014.gw', '/tmp/mint/000160003.gw', '/tmp/mint/000020007.mgt', '/tmp/mint/000070005.sol', '/tmp/mint/000050001.gw', '/tmp/mint/000130005.hru', '/tmp/mint/000150011.mgt', '/tmp/mint/000030003.mgt', '/tmp/mint/000100004.sol', '/tmp/mint/000040003.chm', '/tmp/mint/000150004.gw', '/tmp/mint/000150014.sep', '/tmp/mint/000190009.sol', '/tmp/mint/000110009.mgt', '/tmp/mint/000190002.sep', '/tmp/mint/000150002.chm', '/tmp/mint/000220004.hru', '/tmp/mint/000160003.mgt', '/tmp/mint/000190008.hru', '/tmp/mint/000180002.sep', '/tmp/mint/000200005.mgt', '/tmp/mint/000140002.hru', '/tmp/mint/000190000.wgn', '/tmp/mint/000110006.hru', '/tmp/mint/000170002.sol', '/tmp/mint/000180005.gw', '/tmp/mint/000030003.hru', '/tmp/mint/000040002.sep', '/tmp/mint/000060004.mgt', '/tmp/mint/000150003.sep', '/tmp/mint/000210000.swq', '/tmp/mint/000120005.sep', '/tmp/mint/000230009.sol', '/tmp/mint/000190007.chm', '/tmp/mint/000190003.sep', '/tmp/mint/000230009.chm', '/tmp/mint/000160007.mgt', '/tmp/mint/000050005.gw', '/tmp/mint/basins.wwq', '/tmp/mint/000160000.rte', '/tmp/mint/000180004.gw', '/tmp/mint/000020003.sep', '/tmp/mint/000140002.mgt', '/tmp/mint/000040008.sol', '/tmp/mint/000070005.sep', '/tmp/mint/000100000.rte', '/tmp/mint/000120004.sol', '/tmp/mint/000130001.mgt', '/tmp/mint/000230010.mgt', '/tmp/mint/000190005.mgt', '/tmp/mint/000190007.sep', '/tmp/mint/000130004.mgt', '/tmp/mint/000050001.sol', '/tmp/mint/000130006.chm', '/tmp/mint/000160006.sep', '/tmp/mint/000120002.hru', '/tmp/mint/000110007.sep', '/tmp/mint/000160001.chm', '/tmp/mint/000050005.mgt', '/tmp/mint/000070007.gw', '/tmp/mint/000170002.sep', '/tmp/mint/000120006.chm', '/tmp/mint/000130001.sep', '/tmp/mint/000230004.mgt', '/tmp/mint/000150010.hru', '/tmp/mint/000140003.hru', '/tmp/mint/000170007.mgt', '/tmp/mint/000180004.mgt', '/tmp/mint/000020004.hru', '/tmp/mint/000040011.sep', '/tmp/mint/sub.dat', '/tmp/mint/000170006.chm', '/tmp/mint/000040006.hru', '/tmp/mint/000150000.sub', '/tmp/mint/000230000.wgn', '/tmp/mint/000230003.gw', '/tmp/mint/000220003.gw', '/tmp/mint/000100003.gw', '/tmp/mint/000230002.gw', '/tmp/mint/000180003.sol', '/tmp/mint/000190006.sep', '/tmp/mint/000010000.pnd', '/tmp/mint/000010001.mgt', '/tmp/mint/000210000.rte', '/tmp/mint/000040004.gw', '/tmp/mint/000090001.mgt', '/tmp/mint/000130003.sep', '/tmp/mint/000140001.sol', '/tmp/mint/000150013.gw', '/tmp/mint/000040007.gw', '/tmp/mint/000040008.chm', '/tmp/mint/000170001.mgt', '/tmp/mint/000150012.sol', '/tmp/mint/000110006.mgt', '/tmp/mint/000220003.hru', '/tmp/mint/000040002.mgt', '/tmp/mint/000180005.chm', '/tmp/mint/000140001.chm', '/tmp/mint/000130003.chm', '/tmp/mint/000160004.gw', '/tmp/mint/000170001.gw', '/tmp/mint/000170006.mgt', '/tmp/mint/000060000.sub', '/tmp/mint/000120002.mgt', '/tmp/mint/000020001.gw', '/tmp/mint/000130006.gw', '/tmp/mint/000200002.mgt', '/tmp/mint/000020001.mgt', '/tmp/mint/000040007.chm', '/tmp/mint/000160004.sol', '/tmp/mint/000140002.sep', '/tmp/mint/000070002.gw', '/tmp/mint/000110003.chm', '/tmp/mint/000160000.pnd', '/tmp/mint/000150012.mgt', '/tmp/mint/000170006.gw', '/tmp/mint/000190008.sep', '/tmp/mint/000100000.wus', '/tmp/mint/000120000.wus', '/tmp/mint/000100001.gw', '/tmp/mint/000050002.hru', '/tmp/mint/000170005.hru', '/tmp/mint/000220002.sol', '/tmp/mint/000190008.mgt', '/tmp/mint/000200004.chm', '/tmp/mint/000040004.mgt', '/tmp/mint/cst.cst', '/tmp/mint/000010003.sol', '/tmp/mint/000070004.hru', '/tmp/mint/000080001.mgt', '/tmp/mint/000220002.gw', '/tmp/mint/000110006.sep', '/tmp/mint/000120003.sep', '/tmp/mint/000180001.sol', '/tmp/mint/000190000.pnd', '/tmp/mint/000170007.chm', '/tmp/mint/000060002.sol', '/tmp/mint/000040002.hru', '/tmp/mint/000020005.mgt', '/tmp/mint/000030002.sol', '/tmp/mint/000150007.chm', '/tmp/mint/000040012.sep', '/tmp/mint/000110011.mgt', '/tmp/mint/000090001.hru', '/tmp/mint/000040009.chm', '/tmp/mint/000040003.hru', '/tmp/mint/000100002.chm', '/tmp/mint/000180002.sol', '/tmp/mint/000020002.gw', '/tmp/mint/000110012.chm', '/tmp/mint/000100001.sep', '/tmp/mint/000120000.swq', '/tmp/mint/000150014.chm', '/tmp/mint/000040011.gw', '/tmp/mint/000210001.hru', '/tmp/mint/000030002.gw', '/tmp/mint/000130006.hru', '/tmp/mint/000190004.gw', '/tmp/mint/000150004.chm', '/tmp/mint/000230009.gw', '/tmp/mint/000230009.mgt', '/tmp/mint/000160006.chm', '/tmp/mint/000230011.gw', '/tmp/mint/ATMO.ATM', '/tmp/mint/000040012.hru', '/tmp/mint/000130000.sub', '/tmp/mint/000020008.chm', '/tmp/mint/000120002.chm', '/tmp/mint/000150006.chm', '/tmp/mint/000150010.sep', '/tmp/mint/000180000.pnd', '/tmp/mint/000110010.gw', '/tmp/mint/000120007.gw', '/tmp/mint/000110001.gw', '/tmp/mint/000200005.hru', '/tmp/mint/000140003.sol', '/tmp/mint/000030004.sep', '/tmp/mint/000110003.mgt', '/tmp/mint/000170001.sep', '/tmp/mint/000210001.sol', '/tmp/mint/000040001.gw', '/tmp/mint/000040009.mgt', '/tmp/mint/000060002.mgt', '/tmp/mint/000230006.hru', '/tmp/mint/000130004.sol', '/tmp/mint/000150009.sol', '/tmp/mint/000080001.hru', '/tmp/mint/000140000.sub', '/tmp/mint/000230007.hru', '/tmp/mint/000130004.hru', '/tmp/mint/000230011.sol', '/tmp/mint/000200005.gw', '/tmp/mint/000060003.gw', '/tmp/mint/000170005.mgt', '/tmp/mint/000160001.sol', '/tmp/mint/000130003.sol', '/tmp/mint/000070008.hru', '/tmp/mint/000220004.sep', '/tmp/mint/000180000.swq', '/tmp/mint/000200004.sol', '/tmp/mint/000060001.mgt', '/tmp/mint/000020005.sep', '/tmp/mint/000110005.chm', '/tmp/mint/000050002.chm', '/tmp/mint/000120004.gw', '/tmp/mint/000190009.gw', '/tmp/mint/000230006.sep', '/tmp/mint/000150013.sol', '/tmp/mint/000190002.gw', '/tmp/mint/000020003.sol', '/tmp/mint/000150008.hru', '/tmp/mint/000160007.sol', '/tmp/mint/000020000.wus', '/tmp/mint/000170004.hru', '/tmp/mint/000080000.wus', '/tmp/mint/000050004.chm', '/tmp/mint/000230010.gw', '/tmp/mint/000060001.hru', '/tmp/mint/000150011.sol', '/tmp/mint/000040012.chm', '/tmp/mint/000160008.hru', '/tmp/mint/000020001.sol', '/tmp/mint/000080002.sol', '/tmp/mint/000170002.mgt', '/tmp/mint/000040008.mgt', '/tmp/mint/000090002.mgt', '/tmp/mint/000150007.gw', '/tmp/mint/000170004.chm', '/tmp/mint/000190005.chm', '/tmp/mint/000070008.sep', '/tmp/mint/000150005.mgt', '/tmp/mint/000080002.sep', '/tmp/mint/000140002.gw', '/tmp/mint/000190002.chm', '/tmp/mint/000150003.gw', '/tmp/mint/000010005.mgt', '/tmp/mint/000190003.mgt', '/tmp/mint/000110005.gw', '/tmp/mint/000110010.mgt', '/tmp/mint/000010003.mgt', '/tmp/mint/000070003.hru', '/tmp/mint/000230006.chm', '/tmp/mint/000160008.sol', '/tmp/mint/000100001.sol', '/tmp/mint/000050001.sep', '/tmp/mint/000200004.gw', '/tmp/mint/000030003.sol', '/tmp/mint/000060000.rte', '/tmp/mint/000080001.chm', '/tmp/mint/000130000.wgn', '/tmp/mint/000210001.mgt', '/tmp/mint/000060003.chm', '/tmp/mint/000230005.mgt', '/tmp/mint/000150012.hru', '/tmp/mint/000230000.wus', '/tmp/mint/000120007.mgt', '/tmp/mint/000170000.wgn', '/tmp/mint/000190005.hru', '/tmp/mint/000110004.sol', '/tmp/mint/000090002.chm', '/tmp/mint/000120005.gw', '/tmp/mint/000060001.gw', '/tmp/mint/000150005.hru', '/tmp/mint/000120000.pnd', '/tmp/mint/000200001.sol', '/tmp/mint/000110002.sep', '/tmp/mint/000150012.chm', '/tmp/mint/000040002.sol', '/tmp/mint/000120001.sep', '/tmp/mint/000010001.chm', '/tmp/mint/000210002.hru', '/tmp/mint/000150013.hru', '/tmp/mint/000190001.chm', '/tmp/mint/000040006.gw', '/tmp/mint/000150005.gw', '/tmp/mint/000040013.sol', '/tmp/mint/000170003.gw', '/tmp/mint/000200002.gw', '/tmp/mint/000230002.sep', '/tmp/mint/000220000.rte', '/tmp/mint/000190007.gw', '/tmp/mint/000180000.wus', '/tmp/mint/000030000.wus', '/tmp/mint/000030002.chm', '/tmp/mint/000130005.chm', '/tmp/mint/000010001.gw', '/tmp/mint/000080002.chm', '/tmp/mint/000140001.hru', '/tmp/mint/000150006.hru', '/tmp/mint/000160001.hru', '/tmp/mint/000160005.sep', '/tmp/mint/000120004.sep', '/tmp/mint/000200002.sep', '/tmp/mint/000220000.sub', '/tmp/mint/000150008.gw', '/tmp/mint/000010003.gw', '/tmp/mint/000020009.sol', '/tmp/mint/000070006.hru', '/tmp/mint/000120006.sol', '/tmp/mint/000150011.sep', '/tmp/mint/000110005.sol', '/tmp/mint/fin.fin', '/tmp/mint/000030004.gw', '/tmp/mint/000090004.sep', '/tmp/mint/000040010.mgt', '/tmp/mint/000150011.chm', '/tmp/mint/000110007.hru', '/tmp/mint/000200001.gw', '/tmp/mint/000150000.wus', '/tmp/mint/000110002.mgt', '/tmp/mint/000070005.hru', '/tmp/mint/000070000.wgn', '/tmp/mint/000030001.chm', '/tmp/mint/000050001.chm', '/tmp/mint/000200003.gw', '/tmp/mint/000230000.rte', '/tmp/mint/000030005.sol', '/tmp/mint/000120007.hru', '/tmp/mint/000150007.sol', '/tmp/mint/000020005.gw', '/tmp/mint/000130001.sol', '/tmp/mint/000110012.sep', '/tmp/mint/000170002.chm', '/tmp/mint/000130005.sol', '/tmp/mint/000170007.hru', '/tmp/mint/000100003.chm', '/tmp/mint/000230007.sep', '/tmp/mint/000110009.hru', '/tmp/mint/000050004.sep', '/tmp/mint/000100003.mgt', '/tmp/mint/000010004.hru', '/tmp/mint/000070005.gw', '/tmp/mint/000070007.sol', '/tmp/mint/000120005.chm', '/tmp/mint/000070003.mgt', '/tmp/mint/000120008.chm', '/tmp/mint/000190004.sol', '/tmp/mint/000020002.chm', '/tmp/mint/000070003.chm', '/tmp/mint/000120008.sep', '/tmp/mint/000030004.chm', '/tmp/mint/000040009.sol', '/tmp/mint/000170006.hru', '/tmp/mint/000220003.sol', '/tmp/mint/000120004.hru', '/tmp/mint/000230008.sol', '/tmp/mint/000010003.hru', '/tmp/mint/000190001.sol', '/tmp/mint/000230007.mgt', '/tmp/mint/000190006.gw', '/tmp/mint/000010000.rte', '/tmp/mint/000190000.swq', '/tmp/mint/000110010.sep', '/tmp/mint/000040010.sep', '/tmp/mint/000030004.sol', '/tmp/mint/000230006.mgt', '/tmp/mint/000110000.wus', '/tmp/mint/000230010.chm', '/tmp/mint/000110007.gw', '/tmp/mint/000220004.mgt', '/tmp/mint/000230008.sep', '/tmp/mint/000140002.chm', '/tmp/mint/000070008.chm', '/tmp/mint/000110008.hru', '/tmp/mint/000120001.gw', '/tmp/mint/000040010.gw', '/tmp/mint/000110009.gw', '/tmp/mint/000160002.mgt', '/tmp/mint/000060003.sep', '/tmp/mint/000070002.sol', '/tmp/mint/000220001.chm', '/tmp/mint/000070007.chm', '/tmp/mint/000230000.swq', '/tmp/mint/000070004.mgt', '/tmp/mint/000160004.sep', '/tmp/mint/000040001.sol', '/tmp/mint/000160008.gw', '/tmp/mint/000120005.hru', '/tmp/mint/000170002.gw', '/tmp/mint/000210000.pnd', '/tmp/mint/000050001.mgt', '/tmp/mint/000140000.wus', '/tmp/mint/000190001.hru', '/tmp/mint/000130002.hru', '/tmp/mint/000200002.hru', '/tmp/mint/000120001.mgt', '/tmp/mint/000080001.sol', '/tmp/mint/000010004.gw', '/tmp/mint/000230010.sep', '/tmp/mint/000090003.chm', '/tmp/mint/000110012.hru', '/tmp/mint/000110006.chm', '/tmp/mint/000120001.chm', '/tmp/mint/000060000.swq', '/tmp/mint/000030004.mgt', '/tmp/mint/000050000.wgn', '/tmp/mint/000220002.mgt', '/tmp/mint/000030005.chm', '/tmp/mint/000230006.gw', '/tmp/mint/000060001.sol', '/tmp/mint/000120000.sub', '/tmp/mint/000120006.gw', '/tmp/mint/000140000.rte', '/tmp/mint/000150007.mgt', '/tmp/mint/000070001.chm', '/tmp/mint/000150005.sep', '/tmp/mint/000040013.chm', '/tmp/mint/000020000.sub', '/tmp/mint/000100002.gw', '/tmp/mint/000070003.sep', '/tmp/mint/000120003.sol', '/tmp/mint/000190007.sol', '/tmp/mint/000020008.mgt', '/tmp/mint/000150006.gw', '/tmp/mint/000190005.sol', '/tmp/mint/000040011.sol', '/tmp/mint/000180003.chm', '/tmp/mint/000050003.gw', '/tmp/mint/000120006.sep', '/tmp/mint/000060004.sep', '/tmp/mint/000090001.sep', '/tmp/mint/000090002.sol', '/tmp/mint/000160008.mgt', '/tmp/mint/000060004.hru', '/tmp/mint/000050002.sol', '/tmp/mint/000070001.sol', '/tmp/mint/000230001.mgt', '/tmp/mint/000070006.sol', '/tmp/mint/000040005.mgt', '/tmp/mint/000150009.hru', '/tmp/mint/000220002.sep', '/tmp/mint/000150000.swq', '/tmp/mint/000150000.pnd', '/tmp/mint/000180005.hru', '/tmp/mint/000010000.wgn', '/tmp/mint/000090000.pnd', '/tmp/mint/000110011.sep', '/tmp/mint/000150007.hru', '/tmp/mint/000020009.chm', '/tmp/mint/000200001.mgt', '/tmp/mint/000070004.sep', '/tmp/mint/000210002.sep', '/tmp/mint/000220000.pnd', '/tmp/mint/output.rch', '/tmp/mint/output.sed', '/tmp/mint/000020004.gw', '/tmp/mint/000060003.sol', '/tmp/mint/000020004.chm', '/tmp/mint/000030001.gw', '/tmp/mint/output.sub', '/tmp/mint/000110003.sol', '/tmp/mint/000200005.chm', '/tmp/mint/000160008.chm', '/tmp/mint/000230011.mgt', '/tmp/mint/000120000.rte', '/tmp/mint/000150008.chm', '/tmp/mint/000040006.sep', '/tmp/mint/000160002.gw', '/tmp/mint/000150002.gw', '/tmp/mint/000230002.chm', '/tmp/mint/000230009.hru', '/tmp/mint/000050006.gw', '/tmp/mint/file.cio', '/tmp/mint/000110008.sep', '/tmp/mint/000070008.sol', '/tmp/mint/000150005.sol', '/tmp/mint/000110008.sol', '/tmp/mint/000010002.chm', '/tmp/mint/000130002.chm', '/tmp/mint/000020008.sol', '/tmp/mint/000020006.gw', '/tmp/mint/000020005.hru', '/tmp/mint/000190001.sep', '/tmp/mint/000100003.hru', '/tmp/mint/000230005.sol', '/tmp/mint/000120002.gw', '/tmp/mint/000030002.mgt', '/tmp/mint/000150005.chm', '/tmp/mint/hyd.out', '/tmp/mint/000130001.hru', '/tmp/mint/000160004.hru', '/tmp/mint/000190000.wus', '/tmp/mint/000070007.sep', '/tmp/mint/000160004.mgt', '/tmp/mint/000160005.hru', '/tmp/mint/pest.dat', '/tmp/mint/000020002.sol', '/tmp/mint/000110004.gw', '/tmp/mint/000090004.mgt', '/tmp/mint/000150015.hru', '/tmp/mint/000040006.chm', '/tmp/mint/000080000.rte', '/tmp/mint/bmp-sedfil.out', '/tmp/mint/000170000.swq', '/tmp/mint/000100002.mgt', '/tmp/mint/000030003.chm', '/tmp/mint/000030005.hru', '/tmp/mint/000150010.chm', '/tmp/mint/000160005.chm', '/tmp/mint/000050002.sep', '/tmp/mint/000050003.chm', '/tmp/mint/000200001.sep', '/tmp/mint/000120006.mgt', '/tmp/mint/000230010.sol', '/tmp/mint/000180001.hru', '/tmp/mint/000200005.sol', '/tmp/mint/000230001.hru', '/tmp/mint/000190004.hru', '/tmp/mint/000140003.sep', '/tmp/mint/000100004.gw', '/tmp/mint/000090003.mgt', '/tmp/mint/000110011.gw', '/tmp/mint/000150007.sep', '/tmp/mint/000010005.chm', '/tmp/mint/000040003.sep', '/tmp/mint/000090000.wus', '/tmp/mint/000050005.hru', '/tmp/mint/000150008.sep', '/tmp/mint/000050006.sol', '/tmp/mint/000170000.sub', '/tmp/mint/000150008.mgt', '/tmp/mint/000190004.chm', '/tmp/mint/000010004.sol', '/tmp/mint/000200005.sep', '/tmp/mint/000190000.rte', '/tmp/mint/000030005.gw', '/tmp/mint/000130002.sep', '/tmp/mint/000110011.chm', '/tmp/mint/000180000.rte', '/tmp/mint/000180003.gw', '/tmp/mint/000190008.chm', '/tmp/mint/till.dat', '/tmp/mint/000040003.mgt', '/tmp/mint/000110000.rte', '/tmp/mint/000010001.hru', '/tmp/mint/000130000.wus', '/tmp/mint/000160000.wgn', '/tmp/mint/000170001.hru', '/tmp/mint/000150012.sep', '/tmp/mint/000160003.chm', '/tmp/mint/000040012.mgt', '/tmp/mint/000190009.sep', '/tmp/mint/000190006.mgt', '/tmp/mint/000070000.swq', '/tmp/mint/000080000.pnd', '/tmp/mint/000150010.sol', '/tmp/mint/000180004.sol', '/tmp/mint/000090003.hru', '/tmp/mint/000190005.gw', '/tmp/mint/000210002.mgt', '/tmp/mint/000110008.gw', '/tmp/mint/000230004.chm', '/tmp/mint/000030000.wgn', '/tmp/mint/000090000.rte', '/tmp/mint/000050000.rte', '/tmp/mint/000130005.sep', '/tmp/mint/000180005.sep', '/tmp/mint/000100004.chm', '/tmp/mint/000190006.sol', '/tmp/mint/000040005.sol', '/tmp/mint/000180002.gw', '/tmp/mint/000040002.gw', '/tmp/mint/000110010.chm', '/tmp/mint/000230011.chm', '/tmp/mint/000090000.sub', '/tmp/mint/000150012.gw', '/tmp/mint/000160001.mgt', '/tmp/mint/000130002.mgt', '/tmp/mint/000230001.chm', '/tmp/mint/000040012.gw', '/tmp/mint/000230001.gw', '/tmp/mint/swat.qst', '/tmp/mint/000080000.wgn', '/tmp/mint/000110004.hru', '/tmp/mint/000040001.mgt', '/tmp/mint/000120005.mgt', '/tmp/mint/000100000.sub', '/tmp/mint/000170007.sol', '/tmp/mint/000050006.chm', '/tmp/mint/000120002.sep', '/tmp/mint/000050006.hru', '/tmp/mint/000190003.hru', '/tmp/mint/000030003.gw', '/tmp/mint/input.std', '/tmp/mint/000040004.chm', '/tmp/mint/000180005.sol', '/tmp/mint/000150014.hru', '/tmp/mint/000170000.pnd', '/tmp/mint/000210001.sep', '/tmp/mint/000140003.mgt', '/tmp/mint/000230001.sep', '/tmp/mint/000020005.sol', '/tmp/mint/000020000.pnd', '/tmp/mint/000040002.chm', '/tmp/mint/000120003.gw', '/tmp/mint/000130000.pnd', '/tmp/mint/000180001.chm', '/tmp/mint/lup.dat', '/tmp/mint/000150001.gw', '/tmp/mint/000150001.hru', '/tmp/mint/000150008.sol', '/tmp/mint/000180002.hru', '/tmp/mint/000080000.sub', '/tmp/mint/000110001.mgt', '/tmp/mint/000070009.gw', '/tmp/mint/000160003.sep', '/tmp/mint/rsv.dat', '/tmp/mint/000200000.wus', '/tmp/mint/000100001.chm', '/tmp/mint/000020008.sep', '/tmp/mint/000110008.mgt', '/tmp/mint/000150003.sol', '/tmp/mint/000020009.gw', '/tmp/mint/000100004.hru', '/tmp/mint/chan.deg', '/tmp/mint/000020007.sol', '/tmp/mint/000150015.gw', '/tmp/mint/000100003.sol', '/tmp/mint/000020006.chm', '/tmp/mint/000230003.chm', '/tmp/mint/000150011.gw', '/tmp/mint/000210000.wus', '/tmp/mint/000040010.hru', '/tmp/mint/000140003.gw', '/tmp/mint/000170006.sol', '/tmp/mint/000220001.sol', '/tmp/mint/000210002.gw', '/tmp/mint/000220001.mgt', '/tmp/mint/000020004.sep', '/tmp/mint/000040006.mgt', '/tmp/mint/000030002.sep', '/tmp/mint/000090003.sol', '/tmp/mint/000110000.swq', '/tmp/mint/000020000.rte', '/tmp/mint/000070008.mgt', '/tmp/mint/000020007.sep', '/tmp/mint/000130004.sep', '/tmp/mint/000040010.chm', '/tmp/mint/000160005.sol', '/tmp/mint/000220002.chm', '/tmp/mint/000170003.chm', '/tmp/mint/000120008.gw', '/tmp/mint/000220003.sep', '/tmp/mint/000060002.gw', '/tmp/mint/000180002.mgt', '/tmp/mint/000160002.hru', '/tmp/mint/000050000.pnd', '/tmp/mint/000100002.sol', '/tmp/mint/000100004.sep', '/tmp/mint/000180004.hru', '/tmp/mint/000110012.sol', '/tmp/mint/000050002.mgt', '/tmp/mint/000120007.sol', '/tmp/mint/000160007.sep', '/tmp/mint/000170005.gw', '/tmp/mint/000220004.sol', '/tmp/mint/000150003.hru', '/tmp/mint/000020006.sol', '/tmp/mint/000070002.hru', '/tmp/mint/000230004.gw', '/tmp/mint/000100003.sep', '/tmp/mint/000030002.hru', '/tmp/mint/000170003.sep', '/tmp/mint/000070006.gw', '/tmp/mint/000230003.sep', '/tmp/mint/fig.fig', '/tmp/mint/000050005.sep', '/tmp/mint/000070000.rte', '/tmp/mint/000110005.mgt', '/tmp/mint/000070007.hru', '/tmp/mint/000120005.sol', '/tmp/mint/000190002.sol', '/tmp/mint/000180000.sub', '/tmp/mint/000070000.sub', '/tmp/mint/000110007.sol', '/tmp/mint/000200004.sep', '/tmp/mint/000090004.hru', '/tmp/mint/000120001.sol', '/tmp/mint/000090002.sep', '/tmp/mint/000190002.mgt', '/tmp/mint/000170000.rte', '/tmp/mint/000110001.sep', '/tmp/mint/000170003.sol', '/tmp/mint/000040000.swq', '/tmp/mint/000140001.mgt', '/tmp/mint/000130004.gw', '/tmp/mint/000170004.sep', '/tmp/mint/000010004.sep', '/tmp/mint/000020001.sep', '/tmp/mint/000220000.wgn', '/tmp/mint/000030005.mgt', '/tmp/mint/000200004.mgt', '/tmp/mint/000150015.sol', '/tmp/mint/000220001.sep', '/tmp/mint/000230003.sol', '/tmp/mint/000110004.sep', '/tmp/mint/000040008.sep', '/tmp/mint/000200003.sol', '/tmp/mint/000160000.wus', '/tmp/mint/000050006.mgt', '/tmp/mint/000210000.wgn', '/tmp/mint/000110011.sol', '/tmp/mint/000230011.hru', '/tmp/mint/000200001.hru', '/tmp/mint/000110001.hru', '/tmp/mint/watout.dat', '/tmp/mint/000070004.sol', '/tmp/mint/bmp-ri.out', '/tmp/mint/000110002.gw', '/tmp/mint/000020002.mgt', '/tmp/mint/000110006.sol', '/tmp/mint/000160007.gw', '/tmp/mint/000180001.sep', '/tmp/mint/septwq.dat', '/tmp/mint/000150010.mgt', '/tmp/mint/000170003.hru', '/tmp/mint/000210002.sol', '/tmp/mint/000230004.sol', '/tmp/mint/000110009.sol', '/tmp/mint/000040007.mgt', '/tmp/mint/000040008.hru', '/tmp/mint/000020009.mgt', '/tmp/mint/000110004.mgt', '/tmp/mint/000230002.hru', '/tmp/mint/000200003.sep', '/tmp/mint/000120008.mgt', '/tmp/mint/000130002.gw', '/tmp/mint/000040011.hru', '/tmp/mint/000200000.pnd', '/tmp/mint/000200000.wgn', '/tmp/mint/000040008.gw', '/tmp/mint/000030000.swq', '/tmp/mint/000230005.sep', '/tmp/mint/000150009.mgt', '/tmp/mint/000040013.sep', '/tmp/mint/000030000.rte', '/tmp/mint/000040000.wus', '/tmp/mint/000160005.mgt', '/tmp/mint/000160000.swq', '/tmp/mint/000050006.sep', '/tmp/mint/000090004.gw', '/tmp/mint/000040004.hru', '/tmp/mint/000170004.sol', '/tmp/mint/000200002.sol', '/tmp/mint/000040012.sol', '/tmp/mint/urban.dat', '/tmp/mint/000090001.chm', '/tmp/mint/000160006.hru', '/tmp/mint/000040013.gw', '/tmp/mint/000020006.hru', '/tmp/mint/000230008.chm', '/tmp/mint/000070005.mgt', '/tmp/mint/000150010.gw', '/tmp/mint/000190004.mgt', '/tmp/mint/000050003.hru', '/tmp/mint/000160002.sep', '/tmp/mint/000040004.sol', '/tmp/mint/000050005.sol', '/tmp/mint/000160002.sol', '/tmp/mint/000010001.sep', '/tmp/mint/000150002.sep', '/tmp/mint/000170006.sep', '/tmp/mint/000190004.sep', '/tmp/mint/000100001.hru', '/tmp/mint/000110002.chm', '/tmp/mint/000130001.chm', '/tmp/mint/000060003.hru', '/tmp/mint/000130005.mgt', '/tmp/mint/000110005.hru', '/tmp/mint/000040009.sep', '/tmp/mint/hru.dat', '/tmp/mint/000150014.sol', '/tmp/mint/000110006.gw', '/tmp/mint/000190005.sep', '/tmp/mint/output.std', '/tmp/mint/000110002.sol', '/tmp/mint/000150004.mgt', '/tmp/mint/000100000.pnd', '/tmp/mint/output.pst', '/tmp/mint/000150006.sol', '/tmp/mint/000040005.chm', '/tmp/mint/000040005.gw', '/tmp/mint/000070009.hru', '/tmp/mint/000020009.sep', '/tmp/mint/000090002.gw', '/tmp/mint/000230008.mgt', '/tmp/mint/000050004.mgt', '/tmp/mint/000190001.mgt', '/tmp/mint/000010004.chm', '/tmp/mint/000020002.hru', '/tmp/mint/000130003.hru', '/tmp/mint/000110003.gw', '/tmp/mint/000180003.mgt', '/tmp/mint/000180002.chm', '/tmp/mint/000220004.chm', '/tmp/mint/000220001.hru', '/tmp/mint/000020008.hru', '/tmp/mint/000150011.hru', '/tmp/mint/000020004.mgt', '/tmp/mint/000040001.hru', '/tmp/mint/000150002.hru', '/tmp/mint/000110009.sep', '/tmp/mint/000230007.gw', '/tmp/mint/000050002.gw', '/tmp/mint/000070002.chm', '/tmp/mint/000140000.pnd', '/tmp/mint/000180003.sep', '/tmp/mint/000150009.sep', '/tmp/mint/000230000.pnd', '/tmp/mint/000060001.sep', '/tmp/mint/000160001.sep', '/tmp/mint/000030001.mgt', '/tmp/mint/000010005.sol', '/tmp/mint/000170003.mgt', '/tmp/mint/000050003.sol', '/tmp/mint/000020003.hru', '/tmp/mint/000090004.sol', '/tmp/mint/000040005.hru', '/tmp/mint/000200004.hru', '/tmp/mint/000040003.gw', '/tmp/mint/000150006.mgt', '/tmp/mint/000230008.gw', '/tmp/mint/000020007.gw', '/tmp/mint/000020000.swq', '/tmp/mint/000110012.gw', '/tmp/mint/000030000.pnd', '/tmp/mint/000150015.chm', '/tmp/mint/000060002.sep', '/tmp/mint/000190002.hru', '/tmp/mint/000230004.hru', '/tmp/mint/000200003.chm', '/tmp/mint/000020003.mgt', '/tmp/mint/000050004.sol', '/tmp/mint/000150015.mgt', '/tmp/mint/000180001.gw', '/tmp/mint/000180005.mgt', '/tmp/mint/000010005.hru', '/tmp/mint/000210001.gw', '/tmp/mint/000170004.mgt', '/tmp/mint/000140000.swq', '/tmp/mint/000120004.mgt', '/tmp/mint/000060002.hru', '/tmp/mint/000060004.chm', '/tmp/mint/000110005.sep', '/tmp/mint/000040013.mgt', '/tmp/mint/000140001.sep', '/tmp/mint/000110010.sol', '/tmp/mint/000110000.wgn', '/tmp/mint/000130003.gw', '/tmp/mint/000160006.sol', '/tmp/mint/000150003.chm', '/tmp/mint/000150014.mgt', '/tmp/mint/000110007.chm', '/tmp/mint/000150002.sol', '/tmp/mint/000020007.chm', '/tmp/mint/000170002.hru', '/tmp/mint/000170007.gw', '/tmp/mint/000180001.mgt', '/tmp/mint/000010000.sub', '/tmp/mint/000020008.gw', '/tmp/mint/000030001.sep', '/tmp/mint/000040001.sep', '/tmp/mint/000120003.mgt', '/tmp/mint/000190009.hru', '/tmp/mint/plant.dat', '/tmp/mint/000040005.sep', '/tmp/mint/000230010.hru', '/tmp/mint/000020001.chm', '/tmp/mint/000040000.sub', '/tmp/mint/000090004.chm', '/tmp/mint/000150001.chm', '/tmp/mint/000050004.gw', '/tmp/mint/000100001.mgt', '/tmp/mint/000150001.sep', '/tmp/mint/000110002.hru', '/tmp/mint/000130004.chm', '/tmp/mint/000160006.mgt', '/tmp/mint/000130000.rte', '/tmp/mint/000190007.mgt', '/tmp/mint/000230003.mgt', '/tmp/mint/pcp1.pcp', '/tmp/mint/000080002.gw', '/tmp/mint/000020006.sep', '/tmp/mint/000020003.chm', '/tmp/mint/000190009.chm', '/tmp/mint/000070009.sol', '/tmp/mint/000040011.chm', '/tmp/mint/000170001.sol', '/tmp/mint/000120001.hru', '/tmp/mint/000220000.swq', '/tmp/mint/000140002.sol', '/tmp/mint/000190009.mgt', '/tmp/mint/000070009.sep', '/tmp/mint/000230001.sol', '/tmp/mint/000230005.gw', '/tmp/mint/000070001.sep', '/tmp/mint/000070001.mgt', '/tmp/mint/000160003.hru', '/tmp/mint/000210000.sub', '/tmp/mint/000120000.wgn', '/tmp/mint/000230005.hru', '/tmp/mint/000110007.mgt', '/tmp/mint/000190007.hru', '/tmp/mint/000130006.mgt', '/tmp/mint/000230008.hru', '/tmp/mint/000040007.sol', '/tmp/mint/000160003.sol', '/tmp/mint/000170001.chm', '/tmp/mint/000100002.sep', '/tmp/mint/000120007.sep', '/tmp/mint/000130000.swq', '/tmp/mint/000220001.gw', '/tmp/mint/000160000.sub', '/tmp/mint/000100000.wgn', '/tmp/mint/000070001.hru', '/tmp/mint/000230007.sol', '/tmp/mint/000010002.gw', '/tmp/mint/000060004.gw', '/tmp/mint/000140003.chm', '/tmp/mint/000160005.gw', '/tmp/mint/000010000.swq', '/tmp/mint/000040000.rte', '/tmp/mint/000040009.hru', '/tmp/mint/000090000.swq', '/tmp/mint/000040011.mgt', '/tmp/mint/000160006.gw', '/tmp/mint/000190003.sol', '/tmp/mint/000030000.sub', '/tmp/mint/000180000.wgn', '/tmp/mint/000010001.sol', '/tmp/mint/000110011.hru', '/tmp/mint/000060001.chm', '/tmp/mint/000150003.mgt', '/tmp/mint/000230000.sub', '/tmp/mint/000230002.sol', '/tmp/mint/000070009.chm', '/tmp/mint/000040001.chm']
mic   commands.py        ERROR    Inputs failed: list index out of range
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 412, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 283, in find_code_files
    if is_executable(files_path):
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 293, in is_executable
    name = "." + (name.split("."))[1]
IndexError: list index out of range
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\TxtInOutMINT\TxtInOut\mic
mic   initialization.py  INFO     MIC has initialized the component
mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.4
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'testbittner', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'testbittner'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'testbittner:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'testbittner_a49fa7b0'}}
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        INFO     start done
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\TxtInOutMINT\TxtInOut\mic
mic   initialization.py  INFO     MIC has initialized the component
mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.4
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'test_bittner', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'test_bittner'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'test_bittner:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'test_bittner_54c84fbe'}}
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': ('swat670',), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        WARNING  Reprozip tracer exited with non-zero code
mic   commands.py        INFO     trace done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'add_parameters', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'name': {'value': 'YEARS', 'type': 'str'}, 'value': {'value': 5, 'type': 'int'}, 'overwrite': {'value': False, 'type': 'bool'}, 'description': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        INFO     Parameter already exists. aborting because overwrite flag is false
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'add_parameters', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'name': {'value': 'YEARS', 'type': 'str'}, 'value': {'value': 5, 'type': 'int'}, 'overwrite': {'value': True, 'type': 'bool'}, 'description': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Adding parameter: {'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   commands.py        INFO     add_parameters done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 412, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/inputs/file.cio',), 'type': 'tuple'}, 'auto_param': {'value': False, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'file_cio': {'path': 'inputs/file.cio', 'format': 'cio'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/file.cio
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 412, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': ('/tmp/mint/inputs',), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 412, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': ('/tmp/mint/inputs',), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 412, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': ('/tmp/mint/inputs',), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 412, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 412, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/inputs/basins.bsn', '/tmp/mint/inputs/file.cio'), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'basins_bsn': {'path': 'inputs/basins.bsn', 'format': 'bsn'}, 'file_cio': {'path': 'inputs/file.cio', 'format': 'cio'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/basins.bsn
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/file.cio
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/inputs/basins.bsn',), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'basins_bsn': {'path': 'inputs/basins.bsn', 'format': 'bsn'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/basins.bsn
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/inputs/file.cio',), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'file_cio': {'path': 'inputs/file.cio', 'format': 'cio'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/file.cio
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 0, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 5, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/inputs/basins.bsn', '/tmp/mint/inputs/file.cio'), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'basins_bsn': {'path': 'inputs/basins.bsn', 'format': 'bsn'}, 'file_cio': {'path': 'inputs/file.cio', 'format': 'cio'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/basins.bsn
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/file.cio
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 420, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   commands.py        INFO     start done
mic   initialization.py  INFO     When creating base dir found base directory already exists: D:\MINT\MINT_Homepage_Modelle\Scenario_Forecast\TxtInOutMINT\TxtInOut\mic
mic   initialization.py  INFO     MIC has initialized the component
mic   _utils.py          INFO     Log file created
mic   _utils.py          INFO     OS: {'name': 'Windows', 'data': {'version': '10.0.17763', 'release': '10', 'platform': 'Windows-10-10.0.17763-SP0'}}
mic   _utils.py          INFO     MIC Version: 1.3.4
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'start', 'command_parameters': {'name': {'value': 'dg', 'type': 'str'}, 'image': {'value': None, 'type': 'NoneType'}}}
mic   initialization.py  DEBUG    detecting framework(s): [<Framework.GENERIC: ('general', 'mintproject/generic:latest')>]
mic   initialization.py  DEBUG    OS name: windows
mic   initialization.py  INFO     Windows os detected. Converting line endings
mic   docker.py          INFO     Downloading and building base docker image
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'name', 'value': 'dg'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'docker_image', 'value': 'dg:latest'}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'framework', 'value': <Framework.GENERIC: ('general', 'mintproject/generic:latest')>}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'data': {'key': 'container_name', 'value': 'dg_5f2ab216'}}
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'trace', 'command_parameters': {'invocation_command': {'value': (), 'type': 'tuple'}, 'continu': {'value': None, 'type': 'NoneType'}, 'overwrite': {'value': None, 'type': 'NoneType'}}}
mic   commands.py        DEBUG    Append mode: None
mic   commands.py        ERROR    Trace failed: tuple index out of range
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 197, in trace
    status = reprozip.tracer.trace.trace(command[0], list(command), base_dir, append, 1)
IndexError: tuple index out of range
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'configs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'configuration_files': {'value': ('/tmp/mint/inputs/file.cio', '/tmp/mint/inputs/basins.bsn'), 'type': 'tuple'}, 'auto_param': {'value': True, 'type': 'bool'}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'configs', 'value': {'file_cio': {'path': 'inputs/file.cio', 'format': 'cio'}, 'basins_bsn': {'path': 'inputs/basins.bsn', 'format': 'bsn'}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/file.cio
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   commands.py        INFO     Added config file: /tmp/mint/inputs/basins.bsn
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'parameters', 'value': {'SFTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMTMP': {'default_value': 0, 'description': '', 'type': ''}, 'SMFMX': {'default_value': 5, 'description': '', 'type': ''}, 'SMFMN': {'default_value': 5, 'description': '', 'type': ''}, 'TIMP': {'default_value': 0.5, 'description': '', 'type': ''}, 'YEARS': {'name': 'YEARS', 'default_value': 7, 'type': 'int', 'description': ''}, 'START_YEAR': {'default_value': 2010, 'description': '', 'type': ''}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'step', 'value': 2}}
mic   commands.py        INFO     configs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: []
mic   commands.py        ERROR    Inputs failed: 'NoneType' object is not iterable
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/mic/click_encapsulate/commands.py", line 420, in inputs
    code_files = find_code_files(spec, inputs_reprozip, config_files_list, user_execution_directory)
  File "/usr/local/lib/python3.6/dist-packages/mic/component/reprozip.py", line 267, in find_code_files
    for run in spec[REPRO_ZIP_RUNS]:
TypeError: 'NoneType' object is not iterable
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'inputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_inputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Inputs found from reprozip: ['/tmp/mint/inputs']
mic   commands.py        DEBUG    code files found from reprozip: ['/tmp/mint/inputs/swat670']
mic   commands.py        INFO     Compressing the input directory (inputs)
mic   commands.py        INFO     Input added: inputs
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'inputs', 'value': {'inputs_zip': {'path': 'inputs.zip', 'format': 'zip'}}}}
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'code_files', 'value': {'swat670': {'path': 'inputs/swat670', 'format': ''}}}}
mic   commands.py        INFO     inputs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'outputs', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}, 'custom_outputs': {'value': (), 'type': 'tuple'}}}
mic   commands.py        DEBUG    Outputs found from reprozip: ['/tmp/mint/inputs/output.std', '/tmp/mint/inputs/output.hru', '/tmp/mint/inputs/output.rsv', '/tmp/mint/inputs/watout.dat', '/tmp/mint/inputs/output.rch', '/tmp/mint/inputs/chan.deg', '/tmp/mint/inputs/hyd.out', '/tmp/mint/inputs/fin.fin', '/tmp/mint/inputs/input.std', '/tmp/mint/inputs/output.sed', '/tmp/mint/inputs/bmp-sedfil.out', '/tmp/mint/inputs/output.sub', '/tmp/mint/inputs/septic.out', '/tmp/mint/inputs/bmp-ri.out']
mic   config_yaml.py     DEBUG    Writing to spec: {'file': '/tmp/mint/mic/mic.yaml', 'data': {'key': 'outputs', 'value': {'output_std': {'path': 'inputs/output.std', 'format': 'std'}, 'output_hru': {'path': 'inputs/output.hru', 'format': 'hru'}, 'output_rsv': {'path': 'inputs/output.rsv', 'format': 'rsv'}, 'watout_dat': {'path': 'inputs/watout.dat', 'format': 'dat'}, 'output_rch': {'path': 'inputs/output.rch', 'format': 'rch'}, 'chan_deg': {'path': 'inputs/chan.deg', 'format': 'deg'}, 'hyd_out': {'path': 'inputs/hyd.out', 'format': 'out'}, 'fin_fin': {'path': 'inputs/fin.fin', 'format': 'fin'}, 'input_std': {'path': 'inputs/input.std', 'format': 'std'}, 'output_sed': {'path': 'inputs/output.sed', 'format': 'sed'}, 'bmp-sedfil_out': {'path': 'inputs/bmp-sedfil.out', 'format': 'out'}, 'output_sub': {'path': 'inputs/output.sub', 'format': 'sub'}, 'septic_out': {'path': 'inputs/septic.out', 'format': 'out'}, 'bmp-ri_out': {'path': 'inputs/bmp-ri.out', 'format': 'out'}}}}
mic   commands.py        INFO     outputs done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'wrapper', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}}}
mic   commands.py        INFO     Generating wrapper code
mic   reprozip.py        DEBUG    Pre runner code: '\ncp -rv swat670 inputs/swat670'
mic   reprozip.py        DEBUG    Runner code: '\npushd inputs\n./swat670\npopd'
mic   initialization.py  DEBUG    run file rendered
mic   initialization.py  DEBUG    io file rendered
mic   commands.py        INFO     wrapper done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'run', 'command_parameters': {'mic_file': {'value': '/tmp/mint/mic/mic.yaml', 'type': 'str'}}}
mic   executor.py        INFO     Running: ./run   -i1 /tmp/mint/mic/executions/09_16_15_28_47/src/inputs.zip  -o1 output_std.std -o2 output_hru.hru -o3 output_rsv.rsv -o4 watout_dat.dat -o5 output_rch.rch -o6 chan_deg.deg -o7 hyd_out.out -o8 fin_fin.fin -o9 input_std.std -o10 output_sed.sed -o11 bmp-sedfil_out.out -o12 output_sub.sub -o13 septic_out.out -o14 bmp-ri_out.out  -p1 "0" -p2 "0" -p3 "5" -p4 "5" -p5 "0.5" -p6 7 -p7 "2010"
mic   executor.py        DEBUG    exe_arr: ['./run', '-i1', '/tmp/mint/mic/executions/09_16_15_28_47/src/inputs.zip', '-o1', 'output_std.std', '-o2', 'output_hru.hru', '-o3', 'output_rsv.rsv', '-o4', 'watout_dat.dat', '-o5', 'output_rch.rch', '-o6', 'chan_deg.deg', '-o7', 'hyd_out.out', '-o8', 'fin_fin.fin', '-o9', 'input_std.std', '-o10', 'output_sed.sed', '-o11', 'bmp-sedfil_out.out', '-o12', 'output_sub.sub', '-o13', 'septic_out.out', '-o14', 'bmp-ri_out.out', '-p1', '0', '-p2', '0', '-p3', '5', '-p4', '5', '-p5', '0.5', '-p6', '7', '-p7', '2010']
mic   commands.py        INFO     Run passed
mic   commands.py        INFO     run done
mic   commands.py        INFO     start done
mic   _utils.py          INFO     <=================>
mic   _utils.py          INFO     Command: {'name': 'upload', 'command_parameters': {'mic_file': {'value': 'D:\\MINT\\MINT_Homepage_Modelle\\Scenario_Forecast\\TxtInOutMINT\\TxtInOut\\mic\\mic.yaml', 'type': 'str'}, 'profile': {'value': 'default', 'type': 'str'}, 'model_configuration': {'value': True, 'type': 'bool'}, 'data_transformation': {'value': None, 'type': 'NoneType'}}}
mic   github.py          INFO     Creating the git repository
mic   github.py          INFO     Compressing code
mic   github.py          INFO     Creating a new commit
